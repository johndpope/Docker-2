version: "3.7"
# TEST DOCKER-COMPOSE

#####
# This serves as a testing docker-compose file
# New services are deployed here before merging into the main compose file
####

########################### NETWORKS
networks:
  t2_proxy:
    external:
      name: t2_proxy
  frontend:
    external:
      name: frontend
  default:
    driver: bridge

########################### SERVICES
services:
### Testing Services ###

  homer:
    image: b4bz/homer
    container_name: homer
    restart: unless-stopped
    networks:
      - t2_proxy
#    ports:
#      - 8080:8080
    security_opt:
      - no-new-privileges:true
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - $DOCKERTESTDIR/homer:/www/assets
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.homer-rtr.entrypoints=websecure"
      - "traefik.http.routers.homer-rtr.rule=Host(`homer.$DOMAINNAME`)"
      - "traefik.http.routers.homer-rtr.tls=true"
      ## Middlewares
      - "traefik.http.routers.homer-rtr.middlewares=chain-no-auth@file"
      ## HTTP Services
      - "traefik.http.routers.homer-rtr.service=homer-svc"
      - "traefik.http.services.homer-svc.loadbalancer.server.port=8080"




  node-red:
    image: nodered/node-red:latest
    container_name: node-red
    restart: unless-stopped
    networks:
      - t2_proxy
#    ports:
#      - $NODERED_PORT:4533
    security_opt:
      - no-new-privileges:true
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - $DOCKERTESTDIR/nodered:/data
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.nodered-rtr.entrypoints=websecure"
      - "traefik.http.routers.nodered-rtr.rule=Host(`nodered.$DOMAINNAME`)"
      - "traefik.http.routers.nodered-rtr.tls=true"
      ## Middlewares
      - "traefik.http.routers.nodered-rtr.middlewares=chain-no-auth@file"
      ## HTTP Services
      - "traefik.http.routers.nodered-rtr.service=nodered-svc"
      - "traefik.http.services.nodered-svc.loadbalancer.server.port=1880"

  portainer:
    container_name: portainer
    image: portainer/portainer:latest
    restart: unless-stopped
    command: -H unix:///var/run/docker.sock
    networks:
      - t2_proxy
    ports:
      - "$PORTAINER_PORT:9000"
    security_opt:
      - no-new-privileges:true
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - $DOCKERDIR/portainer/data:/data
