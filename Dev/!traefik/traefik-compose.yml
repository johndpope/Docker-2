---
version: '3.7'
services:
  traefik:
    image: traefik:v2.2
    networks:
      - traefik-public
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
      - target: 8080
        published: 8080
        protocol: tcp
        mode: host
#    deploy:
#      placement:
#        constraints:
#          # Make the traefik service run only on the node with this label
#          # as the node with it has the volume for the certificates
#          - node.labels.traefik-public.traefik-public-certificates == true
    environment:
      - CF_API_EMAIL=thehunterewhite@gmail.com
      - CF_API_KEY=50ec1fbb9e5c03448d6b2805fe45182df26a8
    labels:
      - "traefik.enable=true"
      - "traefik.constraint-label=traefik-public"
      - "traefik.http.routers.http-catchall.entrypoints=http"
      - "traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.routers.traefik-rtr.entrypoints=https"
      - "traefik.http.routers.traefik-rtr.rule=Host(`traefik.int.whitehome.io`)"
      - "traefik.http.routers.traefik-rtr.tls=true"
#      - "traefik.http.routers.traefik-rtr.tls.certresolver=dns-cloudflare" # Comment out this line after first run of traefik to force the use of wildcard certs
      - "traefik.http.routers.traefik-rtr.tls.domains[0].main=whitehome.io"
      - "traefik.http.routers.traefik-rtr.tls.domains[0].sans=*.whitehome.io"
#      - traefik.http.routers.traefik-rtr.tls.domains[1].main=whitehome.io
#      - traefik.http.routers.traefik-rtr.tls.domains[1].sans=*.whitehome.io
      - "traefik.http.routers.traefik-rtr.service=api@internal"
      - "traefik.http.routers.traefik-rtr.middlewares=middlewares-basic-auth@file"
#      - "traefik.http.routers.traefik-public-https.middlewares=admin-auth"
      - "traefik.http.services.traefik-public.loadbalancer.server.port=8080"
    command:
      - --global.checkNewVersion=true
      - --global.sendAnonymousUsage=true
      - --entryPoints.http.address=:80
      - --entryPoints.https.address=:443
      - --entrypoints.https.forwardedHeaders.trustedIPs=173.245.48.0/20,103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,141.101.64.0/18,108.162.192.0/18,190.93.240.0/20,188.114.96.0/20,197.234.240.0/22,198.41.128.0/17,162.158.0.0/15,104.16.0.0/12,172.64.0.0/13,131.0.72.0/22
      - --entryPoints.traefik.address=:8080
      - --api=true
      - --api.insecure=true
      - --serversTransport.insecureSkipVerify=true
      - --log=true
      - --log.level=DEBUG # (Default: error) DEBUG, INFO, WARN, ERROR, FATAL, PANIC
      - --accessLog=true
      - --accessLog.filePath=/traefik.log
      - --accessLog.bufferingSize=100
      - --accessLog.filters.statusCodes=400-499
      - --providers.docker=true
      - --providers.docker.constraints=Label(`traefik.constraint-label`, `traefik-public`)
      - --providers.docker.endpoint=unix:///var/run/docker.sock
      - --providers.docker.defaultrule=Host(`{{ index .Labels "com.docker.compose.service" }}.int.whitehome.io`)
      - --providers.docker.exposedByDefault=false
      - --providers.docker.network=traefik-public
      - --providers.docker.swarmMode=false
      - --providers.file.directory=/rules # Load dynamic configuration from one or more .toml or .yml files in a directory.
#      - --providers.file.watch=true # Only works on top level files in the rules folder
      - --certificatesResolvers.dns-cloudflare.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory # LetsEncrypt Staging Server - uncomment when testing
      - --certificatesResolvers.dns-cloudflare.acme.email=thehunterewhite@gmail.com
      - --certificatesResolvers.dns-cloudflare.acme.storage=/acme.json
      - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.provider=cloudflare
      - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.resolvers=1.1.1.1:53,1.0.0.1:53
    volumes:
      - /docker-data/traefik/rules:/rules
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /docker-data/traefik/acme/acme.json:/acme.json
      - /docker-data/traefik/traefik.log:/traefik.log
      - /docker-data/shared:/shared
    restart: unless-stopped

networks:
  traefik-public:
    external: true
